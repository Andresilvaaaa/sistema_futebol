"""Add multi-tenant constraints (FKs compostas e unicidade por usuário)

Revision ID: b97cc35f62e7
Revises: 4f7d0e32f0cd
Create Date: 2025-10-10 01:19:59.609485

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b97cc35f62e7'
down_revision = '4f7d0e32f0cd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Reconstruir tabela 'players' para remover UNIQUE(phone) e adicionar unicidades compostas
    op.execute('PRAGMA foreign_keys=OFF')
    op.execute('DROP TABLE IF EXISTS players_new')
    op.execute(
        sa.text(
            """
            CREATE TABLE players_new (
                id VARCHAR(36) NOT NULL,
                name VARCHAR(100) NOT NULL,
                position VARCHAR(50) NOT NULL,
                phone VARCHAR(20) NOT NULL,
                email VARCHAR(120),
                join_date DATE NOT NULL,
                status VARCHAR(20) NOT NULL,
                is_active BOOLEAN NOT NULL,
                user_id VARCHAR(36) NOT NULL,
                created_at DATETIME NOT NULL,
                updated_at DATETIME NOT NULL,
                PRIMARY KEY (id),
                FOREIGN KEY(user_id) REFERENCES users (id)
            )
            """
        )
    )
    # Copiar dados existentes
    op.execute(
        sa.text(
            'INSERT INTO players_new (id, name, position, phone, email, join_date, status, is_active, user_id, created_at, updated_at) '
            'SELECT id, name, position, phone, email, join_date, status, is_active, user_id, created_at, updated_at FROM players'
        )
    )
    # Substituir tabela original
    op.execute(sa.text('DROP TABLE players'))
    op.execute(sa.text('ALTER TABLE players_new RENAME TO players'))
    # Índices/constraints necessárias
    op.execute(sa.text('CREATE UNIQUE INDEX IF NOT EXISTS uq_players_id_user ON players (id, user_id)'))
    op.execute(sa.text('CREATE UNIQUE INDEX IF NOT EXISTS uq_players_user_phone ON players (user_id, phone)'))
    op.execute(sa.text('CREATE INDEX IF NOT EXISTS ix_players_email ON players (email)'))
    op.execute(sa.text('CREATE INDEX IF NOT EXISTS ix_players_name ON players (name)'))
    op.execute('PRAGMA foreign_keys=ON')

    with op.batch_alter_table('monthly_periods', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_monthly_periods_id_user', ['id', 'user_id'])
    with op.batch_alter_table('casual_players', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_casual_players_monthly_period_user', 'monthly_periods', ['monthly_period_id', 'user_id'], ['id', 'user_id'], ondelete='CASCADE')

    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_expenses_monthly_period_user', 'monthly_periods', ['monthly_period_id', 'user_id'], ['id', 'user_id'], ondelete='CASCADE')

    with op.batch_alter_table('monthly_players', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_monthly_players_user_player_period', ['user_id', 'player_id', 'monthly_period_id'])
        batch_op.create_foreign_key('fk_monthly_players_monthly_period_user', 'monthly_periods', ['monthly_period_id', 'user_id'], ['id', 'user_id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_monthly_players_player_user', 'players', ['player_id', 'user_id'], ['id', 'user_id'], ondelete='CASCADE')

    

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('monthly_players', schema=None) as batch_op:
        batch_op.drop_constraint('fk_monthly_players_player_user', type_='foreignkey')
        batch_op.drop_constraint('fk_monthly_players_monthly_period_user', type_='foreignkey')
        batch_op.drop_constraint('uq_monthly_players_user_player_period', type_='unique')

    with op.batch_alter_table('casual_players', schema=None) as batch_op:
        batch_op.drop_constraint('fk_casual_players_monthly_period_user', type_='foreignkey')

    with op.batch_alter_table('players', schema=None) as batch_op:
        batch_op.drop_constraint('uq_players_user_phone', type_='unique')
        batch_op.drop_constraint('uq_players_id_user', type_='unique')

    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.drop_constraint('fk_expenses_monthly_period_user', type_='foreignkey')

    with op.batch_alter_table('monthly_periods', schema=None) as batch_op:
        batch_op.drop_constraint('uq_monthly_periods_id_user', type_='unique')

    # ### end Alembic commands ###
