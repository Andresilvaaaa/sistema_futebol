# docker-compose.prod.yml
# Configuração para produção com PostgreSQL

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sistema_futebol_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sistema_futebol_prod
      POSTGRES_USER: sistema_futebol
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-1410andrE!}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups  # Para backups automáticos
    ports:
      - "5432:5432"
    networks:
      - sistema-futebol
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sistema_futebol -d sistema_futebol_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Backend Flask
  backend:
    image: ${IMAGE_NAMESPACE}/sistema-futebol-backend:latest
    container_name: sistema_futebol_backend
    restart: unless-stopped
    environment:
      FLASK_ENV: production
      DATABASE_URL: postgresql://sistema_futebol:${POSTGRES_PASSWORD:-1410andrE!}@postgres:5432/sistema_futebol_prod
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      CORS_ORIGINS: ${CORS_ORIGINS}
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5000"
    volumes:
      - ./instance:/app/instance
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./migrations:/app/migrations  # Importante para migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sistema-futebol
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js
  frontend:
    image: ${IMAGE_NAMESPACE}/sistema-futebol-frontend:latest
    container_name: sistema_futebol_frontend
    restart: unless-stopped
    environment:
      PORT: 3000
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://esporteflowpro.com.br/api}
      NODE_ENV: production
    ports:
      - "8080:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - sistema-futebol
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  sistema-futebol:
    driver: bridge